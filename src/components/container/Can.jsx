/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 can.gltf 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useLoader } from "@react-three/fiber";
import { TextureLoader, DoubleSide } from "three";
import { useCustomGLTF } from "../../hooks/useCustomGLTF";
export function Can(props) {
  const { scene } = useCustomGLTF('can.gltf')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)

  // 텍스처 로드
  const texture = useLoader(TextureLoader, "/sample.png");


  return (
    <group {...props} dispose={null}>
      <directionalLight intensity={6830} decay={2} color="#fff5cf" position={[14.273, 20.57, -4.932]} rotation={[-1.787, 0.605, 0.255]} target={nodes.영역001.target}>
        <primitive object={nodes.영역001.target} position={[0, 0, -1]} />
      </directionalLight>
      {/* 텍스처 적용 */}
      <mesh geometry={nodes.원형001.geometry} position={[-0.022, 3.18, -0.079]} scale={0.299}>
        <meshStandardMaterial
          color="green"
        />
      </mesh>

      <mesh geometry={nodes.실린더001.geometry} position={[-0.022, 3.182, -0.176]} scale={0.066}>
        <meshStandardMaterial
          color="green"
        />
      </mesh>

      <mesh geometry={nodes.실린더.geometry} position={[-0.022, 1.645, 0]} scale={[1, 1.56, 1]}>
        <meshStandardMaterial map={texture} />

      </mesh>
    </group>
  )
}


