/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf 
Author: Valery.Li (https://sketchfab.com/Valery.Li)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/can-soup-6848fd0ec6df45bcb53fc0e47b51e844
Title: Can-soup
*/

import React, { useEffect, useState } from 'react'
import { useGLTF } from '@react-three/drei'

export function Soup({ imageSrc, ...props }) {

  const { nodes, materials } = useGLTF('/soup.gltf')


  useEffect(() => {
    if (imageSrc) {

      const texture = materials?.['01_-_Default']?.map  // 기존 텍스처 가져오기
      console.log("=====test=====")
      console.log("=====imageSrc=====", imageSrc);

      if (texture) {
        texture.dispose();

        // 기존 텍스처 복사 (기존 텍스처의 속성 유지)
        const newTexture = texture.clone();
        
        newTexture.image = new Image();
        newTexture.image.src = imageSrc; 
        // 텍스처의 UV 좌표를 조정
        newTexture.offset.y = 1;  // Y축으로 텍스처를 뒤집음 (상하 반전)
        newTexture.repeat.y = -1; // Y축 반전


        // 텍스처 로드 후 다시 업데이트
        newTexture.needsUpdate = true;
        materials['01_-_Default'].map = newTexture;
      }

    }
  }, [imageSrc, materials])


  return (
    <group {...props} dispose={null}>
      <group scale={0.025}>
        <group position={[-0.527, 0, 0.075]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.7, 0.7, 1]}>
          <mesh geometry={nodes['Soup_Can_01_-_Default_0'].geometry} material={materials['01_-_Default']} />
          <mesh geometry={nodes['Soup_Can_02_-_Default_0'].geometry} material={materials['02_-_Default']} />
        </group>
      </group>
    </group>

  )
}

useGLTF.preload('/soup.gltf')
